@page "/"
@using CoopWeb.Data
@using CoopWeb.Services
@using CoopWeb.Utils
@using Microsoft.AspNetCore.Identity
@inject IUserService UserService
@inject UserManager<ApplicationUser> UserManager
@inject SignInManager<ApplicationUser> SignInManager
@inject NavigationManager NavigationManager
@inject ProjectService ProjectService
<PageTitle>Student</PageTitle>

<h1>รายชื่อนักศึกษาฝึกสหกิจศึกษา ประจำปีการศึกษา 2566</h1>

@if (AllProjects == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="container">
        <div class="table-responsive">
            <table class="table table-bordered table-striped table-hover">
                <thead class="thead-dark">
                    <tr>
                        <th rowspan="2" class="text-center text-nowrap">Project ID.</th>
                        <th rowspan="2" class="text-center text-nowrap">รหัส นศ.</th>
                        <th rowspan="2" class="text-center text-nowrap">ชื่อ-สกุล</th>
                        <th rowspan="2" class="text-center text-nowrap">ชื่อเล่น</th>
                        <th rowspan="2" class="text-center text-nowrap">ชื่อโครงการ (ไทย)</th>
                        <th colspan="3" class="text-center text-nowrap">ที่ปรึกษาโครงการคอมพิวเตอร์ศึกษา</th>
                        <th rowspan="2" class="text-center text-nowrap">สถานที่ฝึกสหกิจศึกษา</th>
                        <th colspan="12" class="text-center">หลังฝึก</th>
                    </tr>
                    <tr>
                        <th class="text-center text-nowrap">ประธาน</th>
                        <th class="text-center text-nowrap">กรรมการ</th>
                        <th class="text-center text-nowrap">กรรมการ</th>
                        <th class="text-center text-nowrap">ส่งส่วนที่ 1</th>
                        <th class="text-center text-nowrap">ส่งส่วนที่ 2</th>
                        <th class="text-center text-nowrap">ส่งส่วนที่ 3</th>
                        <th class="text-center text-nowrap">ส่งส่วนที่ 4</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var project in AllProjects)
                    {

                        @if (!ProjectMembers.ContainsKey(project.ProjectId))
                        {
                            <p><em>Loading members...</em></p>
                        }
                        else
                        {
                            @foreach (var member in ProjectMembers[project.ProjectId])
                            {
                                <tr>
                                    <td>@member.ProjectId</td>
                                    <td>@member.StudentID</td>
                                    <td class="text-nowrap">@member.FirstName @member.LastName</td>
                                    <td>@member.Nickname</td>
                                    <td class="text-nowrap">@project.ProjectName</td>
                                    <td>@project.Chairman</td>
                                    <td>@project.Director1</td>
                                    <td>@project.Director2</td>
                                    <td>@project.WorkPlace</td>
                                    @if (!ProjectStages.ContainsKey(project.ProjectId))
                                    {
                                        <p><em>Loading stages...</em></p>
                                    }
                                    else
                                    {
                                        @foreach (var stage in ProjectStages[project.ProjectId])
                                        {
                                            <td >
                                        <div>
                                            <p>
                                                รอบที่ @stage.StageNumber : @stage.StageName
                                            </p>
                                            <p>
                                                กำหนดเส้นตาย: @stage.Deadline?.ToString("yyyy-MM-dd")
                                            </p>
                                            <div class="badge @(BadgeColor(stage.Status)) status-badge">@stage.Status</div>

                                        </div>

                                            </td>
                                        }
                                    }
                                </tr>
                            }

                        }

                    }
                </tbody>
            </table>
        </div>
    </div>
}

@code {
    private List<Project> AllProjects;
    private Dictionary<int, List<ApplicationUser>> ProjectMembers = new Dictionary<int, List<ApplicationUser>>();
    private Dictionary<int, List<Stage>> ProjectStages = new Dictionary<int, List<Stage>>();
    private Project currentProject = new Project();
    private bool showForm = false;
    private bool isEditMode = false;

    protected override async Task OnInitializedAsync()
    {
        await ReloadProjects();
    }

    private async Task ReloadProjects()
    {
        AllProjects = (await ProjectService.GetAllProjectsAsync()).ToList();
        await LoadProjectMembers();
        await LoadProjectStages();
    }

    private async Task LoadProjectMembers()
    {
        foreach (var project in AllProjects)
        {
            ProjectMembers[project.ProjectId] = (await ProjectService.GetProjectMembersAsync(project.ProjectId)).ToList();
        }
    }

    private async Task LoadProjectStages()
    {
        foreach (var project in AllProjects)
        {
            ProjectStages[project.ProjectId] = (await ProjectService.GetStagesByProjectIdAsync(project.ProjectId)).ToList();
        }
    }

        private string BadgeColor(string status)
    {
        return status switch
        {
            "New" => "bg-primary",
            "Pending" => "bg-warning",
            "Approved" => "bg-success",
            "Rejected" => "bg-danger",
            _ => "bg-secondary"
        };
    }
}
